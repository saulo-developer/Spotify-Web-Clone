{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {\n    this.userNameFormControl = new FormControl(null, [Validators.required, Validators.email]);\n    this.passwordFormControl = new FormControl(null, [Validators.minLength(4)]);\n  }\n  ngOnInit() {\n    this.userForm = new FormGroup({\n      username: this.userNameFormControl,\n      password: this.passwordFormControl\n    });\n  }\n  submit() {\n    console.log(this.userForm.value);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 39,\n    vars: 12,\n    consts: [[1, \"container\"], [1, \"login__container\"], [\"src\", \"assets/spotify_green.png\", \"width\", \"300\"], [\"type\", \"text\", \"placeholder\", \"Email address or username\", 3, \"formControl\"], [\"type\", \"password\", \"placeholder\", \"Password\", 3, \"formControl\"], [1, \"mt-3\"], [1, \"action_buttons\"], [\"type\", \"checkbox\", \"id\", \"remember_me\"], [\"for\", \"remember_me\"], [1, \"login__btn\"], [\"[style.width\", \"'30%'\"], [1, \"signup__btn\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2)(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\")(6, \"strong\");\n        i0.ɵɵtext(7, \"Email address or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"br\")(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\")(12, \"strong\");\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\")(15, \"input\", 4)(16, \"br\");\n        i0.ɵɵelementStart(17, \"label\", 5)(18, \"small\")(19, \"a\");\n        i0.ɵɵtext(20, \"\\n>\");\n        i0.ɵɵelementStart(21, \"b\");\n        i0.ɵɵtext(22, \"Forgot your passaword?\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"span\");\n        i0.ɵɵtext(25, \"\\n[style.gap]=\\\"'5px'\\\" \");\n        i0.ɵɵelement(26, \"input\", 7);\n        i0.ɵɵelementStart(27, \"label\", 8)(28, \"span\")(29, \"strong\");\n        i0.ɵɵtext(30, \"Remember me\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(31, \"button\", 9);\n        i0.ɵɵtext(32, \"LOG IN\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(33, \"hr\", 10);\n        i0.ɵɵelementStart(34, \"h5\")(35, \"strong\");\n        i0.ɵɵtext(36, \"Don't have account?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"button\", 11);\n        i0.ɵɵtext(38, \"SIGN UP FOR SPOTIFY\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.userNameFormControl);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.passwordFormControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"text-decoration\", \"underline\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleProp(\"display\", \"flex\")(\"justify-content\", \"flex-start\")(\"align-items\", \"stretch\");\n        i0.ɵɵadvance(13);\n        i0.ɵɵstyleProp(\"width\", \"30%\");\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","userNameFormControl","required","email","passwordFormControl","minLength","ngOnInit","userForm","username","password","submit","console","log","value","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵstyleProp"],"sources":["C:\\Users\\Particular\\Desktop\\spotify 2\\spotify-clone\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\Particular\\Desktop\\spotify 2\\spotify-clone\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\npublic userNameFormControl = new FormControl(null, [\n  Validators.required, \n  Validators.email\n]);\npublic passwordFormControl = new FormControl(null, [Validators.minLength(4)]);\n\n\npublic userForm!: FormGroup;\nconstructor() {}\n\n\nngOnInit(): void {\n  this.userForm = new FormGroup ( {\nusername: this.userNameFormControl,\npassword: this.passwordFormControl,\n\n\n\n\n  }\n  ); \n}\n\n\nsubmit() {\n  console.log(this.userForm.value);\n\n}\n\n\n\n}\n","<div class=\"container\">\n<div class=\"login__container\">\n\n<img src=\"assets/spotify_green.png\" width=\"300\" />\n<hr />\n<div>\n<label><strong>Email address or username</strong></label> <br />\n<input [formControl]=\"userNameFormControl\" type=\"text\" placeholder=\"Email address or username\"/>\n</div>\n<div>\n<label><strong>Password</strong></label> <br />\n<input [formControl]=\"passwordFormControl\" type=\"password\" placeholder=\"Password\"/> <br />\n<label class=\"mt-3\"\n><small\n><a [style.textDecoration]=\"'underline'\">\n><b>Forgot your passaword?</b></a>\n</small>\n</label>\n</div>\n<div class=\"action_buttons\"> \n<span\n[style.display]=\"'flex'\" \n[style.justifyContent]=\"'flex-start'\" \n[style.alignItems]=\"'stretch'\">\n[style.gap]=\"'5px'\"\n\n<input type=\"checkbox\" id=\"remember_me\"  />\n\n<label for=\"remember_me\">\n<span><strong>Remember me</strong></span>\n</label>\n\n</span>\n<button class=\"login__btn\">LOG IN</button>\n\n</div>\n<hr [style.width=\"'30%'\"/>\n<h5><strong>Don't have account?</strong></h5>\n<button class=\"signup__btn\" [style.width]=\"'30%'\">SIGN UP FOR SPOTIFY</button>\n</div>\n</div>\n\n\n\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,cAAc;EAU3BC,YAAA;IARO,KAAAC,mBAAmB,GAAG,IAAIL,WAAW,CAAC,IAAI,EAAE,CACjDE,UAAU,CAACI,QAAQ,EACnBJ,UAAU,CAACK,KAAK,CACjB,CAAC;IACK,KAAAC,mBAAmB,GAAG,IAAIR,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EAI9D;EAGfC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAIV,SAAS,CAAG;MAClCW,QAAQ,EAAE,IAAI,CAACP,mBAAmB;MAClCQ,QAAQ,EAAE,IAAI,CAACL;KAKZ,CACA;EACH;EAGAM,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAACM,KAAK,CAAC;EAElC;EAAC,QAAAC,CAAA,G;qBA7BYf,cAAc;EAAA;EAAA,QAAAgB,EAAA,G;UAAdhB,cAAc;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BE,EAAA,CAAAC,cAAA,aAAuB;QAGvBD,EAAA,CAAAE,SAAA,aAAkD;QAElDF,EAAA,CAAAC,cAAA,UAAK;QACUD,EAAA,CAAAG,MAAA,gCAAyB;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAASJ,EAAA,CAAAE,SAAA,SAAM;QAEhEF,EAAA,CAAAI,YAAA,EAAM;QACNJ,EAAA,CAAAC,cAAA,WAAK;QACUD,EAAA,CAAAG,MAAA,gBAAQ;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAASJ,EAAA,CAAAE,SAAA,UAAM;QAE/CF,EAAA,CAAAC,cAAA,gBACC;QAEDD,EAAA,CAAAG,MAAA,WAAC;QAAAH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAG,MAAA,8BAAsB;QAAAH,EAAA,CAAAI,YAAA,EAAI;QAI9BJ,EAAA,CAAAC,cAAA,cAA4B;QAK5BD,EAAA,CAAAG,MAAA,gCAEA;QAAAH,EAAA,CAAAE,SAAA,gBAA2C;QAE3CF,EAAA,CAAAC,cAAA,gBAAyB;QACXD,EAAA,CAAAG,MAAA,mBAAW;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAIlCJ,EAAA,CAAAC,cAAA,iBAA2B;QAAAD,EAAA,CAAAG,MAAA,cAAM;QAAAH,EAAA,CAAAI,YAAA,EAAS;QAG1CJ,EAAA,CAAAE,SAAA,cAA0B;QAC1BF,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAG,MAAA,2BAAmB;QAAAH,EAAA,CAAAI,YAAA,EAAS;QACxCJ,EAAA,CAAAC,cAAA,kBAAkD;QAAAD,EAAA,CAAAG,MAAA,2BAAmB;QAAAH,EAAA,CAAAI,YAAA,EAAS;;;QA/BvEJ,EAAA,CAAAK,SAAA,GAAmC;QAAnCL,EAAA,CAAAM,UAAA,gBAAAP,GAAA,CAAAtB,mBAAA,CAAmC;QAInCuB,EAAA,CAAAK,SAAA,GAAmC;QAAnCL,EAAA,CAAAM,UAAA,gBAAAP,GAAA,CAAAnB,mBAAA,CAAmC;QAGtCoB,EAAA,CAAAK,SAAA,GAAoC;QAApCL,EAAA,CAAAO,WAAA,gCAAoC;QAOxCP,EAAA,CAAAK,SAAA,GAAwB;QAAxBL,EAAA,CAAAO,WAAA,mBAAwB;QAiBIP,EAAA,CAAAK,SAAA,IAAqB;QAArBL,EAAA,CAAAO,WAAA,gBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}